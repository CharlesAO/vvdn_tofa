//
// 30fps binned (cropped) live images at 2104x1560 pixels, sent on 2 MIPI lanes at 1200MHz (1200 Mbps per lane);
// need a system clock/aux clock of at least 480 Mhz !
//
// This is "reg_B2" from Sony Spreadsheet
//
//HEADER_FORMAT = V2.1

#ifndef _OV5658_2L_2592x1944_RAW10_30Hz_H_
#define _OV5658_2L_2592x1944_RAW10_30Hz_H_

#include "mv_types.h"
#include "CameraDefines.h"

#define COUNT_OF(x) ((sizeof(x)/sizeof(0[x])) / ((!(sizeof(x) % sizeof(0[x])))))

const u16 ov5658_2L_1280x972_RAW10_30Hz_I2CregsCfg[][2] = {
//configuration step 0
#if 0
//1296x972 res
{0x0103, 0x01},
{0x3210, 0x43},
{0x3001, 0x0e},
{0x3002, 0xc0},
{0x3011, 0x21},
{0x3012, 0x0a},
{0x3013, 0x50},
{0x3015, 0x09},
{0x3018, 0xf0},
{0x3021, 0x40},
{0x3500, 0x00},
{0x3501, 0x3d},
{0x3502, 0x00},
{0x3503, 0x07},
{0x3505, 0x00},
{0x3506, 0x00},
{0x3507, 0x02},
{0x3508, 0x00},
{0x3509, 0x10},
{0x350a, 0x00},
{0x350b, 0x80},
{0x3600, 0x69},
{0x3602, 0x3c},
{0x3605, 0x14},
{0x3606, 0x09},
{0x3612, 0x04},
{0x3613, 0x66},
{0x3614, 0x39},
{0x3615, 0x33},
{0x3616, 0x46},
{0x361a, 0x0a},
{0x361c, 0x76},
{0x3620, 0x00},
{0x3640, 0x00},
{0x3641, 0x00},
{0x3642, 0x00},
{0x3643, 0x00},
{0x3660, 0x04},
{0x3665, 0x00},
{0x3666, 0x00},
{0x3667, 0x00},
{0x366a, 0x80},
{0x3680, 0xe0},
{0x3692, 0x00},
{0x3700, 0x42},
{0x3701, 0x14},
{0x3702, 0xe8},
{0x3703, 0x20},
{0x3704, 0x5e},
{0x3705, 0x02},
{0x3708, 0xe6},
{0x3709, 0xc7},
{0x370a, 0x00},
{0x370b, 0x20},
{0x370c, 0x0c},
{0x370d, 0x11},
{0x370e, 0x00},
{0x370f, 0x40},
{0x3710, 0x00},
{0x3715, 0x09},
{0x371a, 0x04},
{0x371b, 0x05},
{0x371c, 0x01},
{0x371e, 0xa1},
{0x371f, 0x18},
{0x3721, 0x00},
{0x3726, 0x00},
{0x372a, 0x01},
{0x3730, 0x10},
{0x3738, 0x22},
{0x3739, 0xe5},
{0x373a, 0x50},
{0x373b, 0x02},
{0x373c, 0x2c},
{0x373f, 0x02},
{0x3740, 0x42},
{0x3741, 0x02},
{0x3743, 0x01},
{0x3744, 0x02},
{0x3747, 0x10},
{0x3754, 0xc0},
{0x3755, 0x07},
{0x3756, 0x1a},
{0x3759, 0x0f},
{0x375c, 0x04},
{0x3767, 0x00},
{0x376b, 0x44},
{0x377b, 0x44},
{0x377c, 0x30},
{0x377e, 0x30},
{0x377f, 0x08},
{0x3781, 0x0c},
{0x3785, 0x1e},
{0x378f, 0xf5},
{0x3791, 0xb0},
{0x379c, 0x0c},
{0x379d, 0x20},
{0x379e, 0x00},
{0x3796, 0x72},
{0x379a, 0x07},
{0x379b, 0xb0},
{0x37c5, 0x00},
{0x37c6, 0x00},
{0x37c7, 0x00},
{0x37c9, 0x00},
{0x37ca, 0x00},
{0x37cb, 0x00},
{0x37cc, 0x00},
{0x37cd, 0x00},
{0x37ce, 0x01},
{0x37cf, 0x00},
{0x37d1, 0x00},
{0x37de, 0x00},
{0x37df, 0x00},
{0x3800, 0x00},
{0x3801, 0x00},
{0x3802, 0x00},
{0x3803, 0x00},
{0x3804, 0x0a},
{0x3805, 0x3f},
{0x3806, 0x07},
{0x3807, 0xa3},
{0x3808, 0x05},
{0x3809, 0x10},
{0x380a, 0x03},
{0x380b, 0xcc},
{0x380c, 0x0c},
{0x380d, 0x98},
{0x380e, 0x07},
{0x380f, 0xc0},
{0x3810, 0x00},
{0x3811, 0x08},
{0x3812, 0x00},
{0x3813, 0x02},
{0x3814, 0x31},
{0x3815, 0x31},
{0x3820, 0x14},
{0x3821, 0x1f},
{0x3823, 0x00},
{0x3824, 0x00},
{0x3825, 0x00},
{0x3826, 0x00},
{0x3827, 0x00},
{0x3829, 0x0b},
{0x382a, 0x04},
{0x382c, 0x02},
{0x382d, 0x01},
{0x3a04, 0x06},
{0x3a05, 0x14},
{0x3a06, 0x00},
{0x3a07, 0xfe},
{0x3b00, 0x00},
{0x3b02, 0x00},
{0x3b03, 0x00},
{0x3b04, 0x00},
{0x3b05, 0x00},
{0x4000, 0x18},
{0x4001, 0x04},
{0x4002, 0x45},
{0x4004, 0x04},
{0x4005, 0x18},
{0x4006, 0x20},
{0x4007, 0x98},
{0x4008, 0x24},
{0x4009, 0x10},
{0x400c, 0x00},
{0x400d, 0x00},
{0x404e, 0x37},
{0x404f, 0x8f},
{0x4058, 0x00},
{0x4100, 0x50},
{0x4101, 0x34},
{0x4102, 0x34},
{0x4104, 0xde},
{0x4300, 0xff},
{0x4307, 0x30},
{0x4311, 0x04},
{0x4315, 0x01},
{0x4501, 0x88},
{0x4502, 0x08},
{0x4816, 0x52},
{0x481f, 0x30},
{0x4826, 0x38},
{0x4837, 0x0a},
{0x4a00, 0xaa},
{0x4a02, 0x00},
{0x4a03, 0x01},
{0x4a05, 0x40},
{0x4a0a, 0x88},
{0x5000, 0x06},
{0x5001, 0x01},
{0x5002, 0x00},
{0x5003, 0x20},
{0x5013, 0x00},
{0x501f, 0x00},
{0x5043, 0x48},
{0x5780, 0x1c},
{0x5786, 0x20},
{0x5788, 0x18},
{0x578a, 0x04},
{0x578b, 0x02},
{0x578c, 0x02},
{0x578e, 0x06},
{0x578f, 0x02},
{0x5790, 0x02},
{0x5791, 0xff},
{0x5e00, 0x00},
{0x5e10, 0x0c},
#endif



{0x0103, 0x01},
{0x3210, 0x43},
{0x3001, 0x0e},
{0x3002, 0xc0},
{0x3011, 0x21},
{0x3012, 0x0a},
{0x3013, 0x50},
{0x3015, 0x09},
{0x3018, 0xf0},
{0x3021, 0x40},
{0x3500, 0x00},
{0x3501, 0x3d},
{0x3502, 0x00},
{0x3503, 0x07},
{0x3505, 0x00},
{0x3506, 0x00},
{0x3507, 0x02},
{0x3508, 0x00},
{0x3509, 0x10},
{0x350a, 0x00},
{0x350b, 0x50},
{0x3600, 0x69},
{0x3602, 0x3c},
{0x3605, 0x14},
{0x3606, 0x09},
{0x3612, 0x04},
{0x3613, 0x66},
{0x3614, 0x39},
{0x3615, 0x33},
{0x3616, 0x46},
{0x361a, 0x0a},
{0x361c, 0x76},
{0x3620, 0x40},
{0x3640, 0x03},
{0x3641, 0x60},
{0x3642, 0x00},
{0x3643, 0x90},
{0x3660, 0x04},
{0x3665, 0x00},
{0x3666, 0x20},
{0x3667, 0x00},
{0x366a, 0x80},
{0x3680, 0xe0},
{0x3692, 0x80},
{0x3700, 0x42},
{0x3701, 0x14},
{0x3702, 0xe8},
{0x3703, 0x20},
{0x3704, 0x5e},
{0x3705, 0x02},
{0x3708, 0xe6},
{0x3709, 0xc7},
{0x370a, 0x00},
{0x370b, 0x20},
{0x370c, 0x0c},
{0x370d, 0x11},
{0x370e, 0x00},
{0x370f, 0x40},
{0x3710, 0x00},
{0x3715, 0x09},
{0x371a, 0x04},
{0x371b, 0x05},
{0x371c, 0x01},
{0x371e, 0xa1},
{0x371f, 0x18},
{0x3721, 0x00},
{0x3726, 0x00},
{0x372a, 0x01},
{0x3730, 0x10},
{0x3738, 0x22},
{0x3739, 0xe5},
{0x373a, 0x50},
{0x373b, 0x02},
{0x373c, 0x2c},
{0x373f, 0x02},
{0x3740, 0x42},
{0x3741, 0x02},
{0x3743, 0x01},
{0x3744, 0x02},
{0x3747, 0x10},
{0x3754, 0xc0},
{0x3755, 0x07},
{0x3756, 0x1a},
{0x3759, 0x0f},
{0x375c, 0x04},
{0x3767, 0x00},
{0x376b, 0x44},
{0x377b, 0x44},
{0x377c, 0x30},
{0x377e, 0x30},
{0x377f, 0x08},
{0x3781, 0x0c},
{0x3785, 0x1e},
{0x378f, 0xf5},
{0x3791, 0xb0},
{0x379c, 0x0c},
{0x379d, 0x20},
{0x379e, 0x00},
{0x3796, 0x72},
{0x379a, 0x07},
{0x379b, 0xb0},
{0x37c5, 0x00},
{0x37c6, 0x00},
{0x37c7, 0x00},
{0x37c9, 0x00},
{0x37ca, 0x00},
{0x37cb, 0x00},
{0x37cc, 0x00},
{0x37cd, 0x00},
{0x37ce, 0x01},
{0x37cf, 0x00},
{0x37d1, 0x00},
{0x37de, 0x00},
{0x37df, 0x00},
{0x3800, 0x00},
{0x3801, 0x00},
{0x3802, 0x00},
{0x3803, 0x00},
{0x3804, 0x0a},
{0x3805, 0x3f},
{0x3806, 0x07},
{0x3807, 0xa3},
{0x3808, 0x05},
{0x3809, 0x10},
{0x380a, 0x03},
{0x380b, 0xcc},
{0x380c, 0x19},
{0x380d, 0x30},
{0x380e, 0x03},
{0x380f, 0xe0},
{0x3810, 0x00},
{0x3811, 0x08},
{0x3812, 0x00},
{0x3813, 0x02},
{0x3814, 0x31},
{0x3815, 0x31},
{0x3820, 0x14},
{0x3821, 0x1f},
{0x3823, 0x00},
{0x3824, 0x00},
{0x3825, 0x00},
{0x3826, 0x00},
{0x3827, 0x00},
{0x3829, 0x0b},
{0x382a, 0x04},
{0x382c, 0x02},
{0x382d, 0x01},
{0x3a04, 0x06},
{0x3a05, 0x14},
{0x3a06, 0x00},
{0x3a07, 0xfe},
{0x3b00, 0x00},
{0x3b02, 0x00},
{0x3b03, 0x00},
{0x3b04, 0x00},
{0x3b05, 0x00},
{0x4000, 0x18},
{0x4001, 0x04},
{0x4002, 0x45},
{0x4004, 0x04},
{0x4005, 0x18},
{0x4006, 0x20},
{0x4007, 0x98},
{0x4008, 0x24},
{0x4009, 0x10},
{0x400c, 0x00},
{0x400d, 0x00},
{0x404e, 0x37},
{0x404f, 0x8f},
{0x4058, 0x00},
{0x4100, 0x50},
{0x4101, 0x34},
{0x4102, 0x34},
{0x4104, 0xde},
{0x4300, 0xff},
{0x4307, 0x30},
{0x4311, 0x04},
{0x4315, 0x01},
{0x4501, 0x88},
{0x4502, 0x08},
{0x4816, 0x52},
{0x481f, 0x30},
{0x4826, 0x38},
{0x4837, 0x0a},
{0x4a00, 0xaa},
{0x4a02, 0x00},
{0x4a03, 0x01},
{0x4a05, 0x40},
{0x4a0a, 0x88},
{0x5000, 0x06},
{0x5001, 0x01},
{0x5002, 0x00},
{0x5003, 0x20},
{0x5013, 0x00},
{0x501f, 0x00},
{0x5043, 0x48},
{0x5780, 0x1c},
{0x5786, 0x20},
{0x5788, 0x18},
{0x578a, 0x04},
{0x578b, 0x02},
{0x578c, 0x02},
{0x578e, 0x06},
{0x578f, 0x02},
{0x5790, 0x02},
{0x5791, 0xff},
{0x5e00, 0x00},
{0x5e10, 0x0c},
{0x0100, 0x01},
{0x0001, 0xf2},
{0x000c, 0x02},
{0x000c, 0x00},
{0x0020, 0x12},
{0x0030, 0x00},
{0x5800, 0x22},
{0x5801, 0x11},
{0x5802, 0x0d},
{0x5803, 0x0d},
{0x5804, 0x12},
{0x5805, 0x26},
{0x5806, 0x09},
{0x5807, 0x07},
{0x5808, 0x05},
{0x5809, 0x05},
{0x580a, 0x07},
{0x580b, 0x0a},
{0x580c, 0x07},
{0x580d, 0x02},
{0x580e, 0x00},
{0x580f, 0x00},
{0x5810, 0x03},
{0x5811, 0x07},
{0x5812, 0x06},
{0x5813, 0x02},
{0x5814, 0x00},
{0x5815, 0x00},
{0x5816, 0x03},
{0x5817, 0x07},
{0x5818, 0x09},
{0x5819, 0x05},
{0x581a, 0x04},
{0x581b, 0x04},
{0x581c, 0x07},
{0x581d, 0x09},
{0x581e, 0x1d},
{0x581f, 0x0e},
{0x5820, 0x0b},
{0x5821, 0x0b},
{0x5822, 0x0f},
{0x5823, 0x1e},
{0x5824, 0x59},
{0x5825, 0x46},
{0x5826, 0x37},
{0x5827, 0x36},
{0x5828, 0x45},
{0x5829, 0x39},
{0x582a, 0x46},
{0x582b, 0x44},
{0x582c, 0x45},
{0x582d, 0x28},
{0x582e, 0x38},
{0x582f, 0x52},
{0x5830, 0x60},
{0x5831, 0x51},
{0x5832, 0x26},
{0x5833, 0x38},
{0x5834, 0x43},
{0x5835, 0x42},
{0x5836, 0x34},
{0x5837, 0x18},
{0x5838, 0x05},
{0x5839, 0x27},
{0x583a, 0x27},
{0x583b, 0x27},
{0x583c, 0x0a},
{0x583d, 0xbf},
{0x5842, 0x01},
{0x5843, 0x2b},
{0x5844, 0x01},
{0x5845, 0x92},
{0x5846, 0x01},
{0x5847, 0x8f},
{0x5848, 0x01},
{0x5849, 0x0c},
};

const u16 ov5658_2L_1280x972_RAW10_30Hz_I2CregsStart[][2] =
{
        {0x0100, 0x01}
};

const u16 ov5658_2L_1280x972_RAW10_30Hz_I2CregsStop[][2] =
{
        {0x0100, 0x00}
};


const I2CConfigDescriptor ov5658_2L_1280x972_RAW10_30Hz_I2CConfigSteps[] =
{
        {
                .numberOfRegs = COUNT_OF(ov5658_2L_1280x972_RAW10_30Hz_I2CregsCfg),
                .delayMs = 200
        },
};

const mipiSpec ov5658_2L_1296x972_RAW10_30Hz_mipiCfg =
{
      .dataMode     = MIPI_D_MODE_0,
      .dataRateMbps = 840,
      .nbOflanes    = 2,
      .pixelFormat  = CSI_RAW_10
};

GenericCamSpec ov5658_2L_1296x972_RAW10_30Hz_camCfg =
{
      .frameWidth            = 1296,
      .frameHeight           = 972,
      .hBackPorch            = 0,
      .hFrontPorch           = 0,
      .vBackPorch            = 0,
      .vFrontPorch           = 0,
      .bytesPerPixel         = 2,
      .internalPixelFormat   = RAW16,
      .mipiCfg               = &ov5658_2L_1296x972_RAW10_30Hz_mipiCfg,
      .idealRefFreq          = 24,
      .sensorI2CAddress1     = (0x6c >> 1),
      .sensorI2CAddress2     = (0x6c >> 1),             //only used for stereo cameras
      .nbOfI2CConfigSteps    = COUNT_OF(ov5658_2L_1280x972_RAW10_30Hz_I2CConfigSteps),
      .i2cConfigSteps        = ov5658_2L_1280x972_RAW10_30Hz_I2CConfigSteps,
      .regSize               = 1,
      .regValues             = ov5658_2L_1280x972_RAW10_30Hz_I2CregsCfg
};

#endif /* _OV5658_2L_2592x1944_RAW10_30Hz_H_ */
