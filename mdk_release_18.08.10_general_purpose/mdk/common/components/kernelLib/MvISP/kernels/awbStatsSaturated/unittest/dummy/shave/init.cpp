///
/// @file
/// @copyright All code copyright Movidius Ltd 2013, all rights reserved.
///            For License Warranty see: common/license.txt
///
/// @brief    
///

#include <awbStatsSaturated.h>
#include <stdio.h>
#include <stdlib.h>
#include <mv_types.h>
#include <moviVectorTypes.h>
#include <svuCommonShave.h>

#define TEST_FRAME_WIDTH 4800
#define MAX_NUMBERS_OF_PAXEL (64*64)

u16 in[TEST_FRAME_WIDTH] __attribute__ ((aligned (16))) = {
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    0x02FF, 0x01FF, 
    0x006F, 0x007F, 
    0x008F, 0x009F, 
    0x00eF, 0x00fF, 
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF, 
    
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    0x0100, 0x01FF, 
    0x01FF, 0x00FF, 
    0x00FF, 0x00FF, 
    0x00FF, 0x00FF, 
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    0x00FF, 0x008F, 
    0x01FF, 0x003F, 
    0x003F, 0x008F, 
    0x02FF, 0x01FF, 
    
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF, 
    
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF, 
    0x0100, 0x01FF, 0x01FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF, 
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF,     
    
    0x00FF, 0x008F, 0x01FF, 0x003F, 0x003F, 0x008F, 0x02FF, 0x01FF, 
    0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF, 0x00FF
};

/*output pre pad marker*/
uint32_t  __attribute__((section(".kept.data")))  __attribute__ ((aligned (16))) output_u32prePad[4];
/*output data marker*/
u8 __attribute__((section(".kept.data")))  __attribute__ ((aligned (16))) output[MAX_NUMBERS_OF_PAXEL * 4] = {
    0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02
};
/*output post pad marker*/
uint32_t __attribute__((section(".kept.data")))  __attribute__ ((aligned (16))) output_u32postPad[4];

u32 nPaxelX  __attribute__ ((aligned (16)))   = 3; 
u32 gapPaxelX  __attribute__ ((aligned (16)))  = 40; 
u32 widthPaxelX __attribute__ ((aligned (16))) = 32;
u32 satPaxelX __attribute__ ((aligned (16)))  = 0xF0;


__attribute__((dllexport)) int main( void )
{
	#ifdef UNIT_TEST_USE_C_VERSION
	mvispStatsAWBSatPixels(output, in, nPaxelX, gapPaxelX, widthPaxelX, satPaxelX);
	#else
    mvispStatsAWBSatPixels_asm(output, in, nPaxelX, gapPaxelX, widthPaxelX, satPaxelX);
	#endif
	
	SHAVE_HALT;
	return 0;
}
