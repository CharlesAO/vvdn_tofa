  /*Linker script file which sets all shave slices code*/
  
SECTIONS {
  
  /*Setting up shave slices memory with absolute addresses*/
  . = 0x70000000;
  __CMX_SLICE0_START = .;
  S.shv0.cmx.text ALIGN(4) : { 
        *(.shv0.S.text*)
        *(.shv0.S.__TEXT__sect)
        *(.shv0.S.__MAIN__sect) 
        *(.shv0.S.init*)
        *(.lrt.shv0.S.text*)
        *(.lrt.shv0.S.__TEXT__sect)
        *(.lrt.shv0.S.__MAIN__sect) 
        *(.lrt.shv0.S.init*)
  }
  S.shv0.cmx.data : { 
        *(.shv0.S.data*)
        *(.shv0.S.rodata*)
        *(.shv0.S.__DATA__sect*)
        *(.shv0.S.__STACK__sect*)
        *(.shv0.S.__static_data*)
        *(.shv0.S.__HEAP__sect*)
        *(.shv0.S.__T__*)
        *(.lrt.shv0.S.data*)
        *(.lrt.shv0.S.rodata*)
        *(.lrt.shv0.S.__DATA__sect*)
        *(.lrt.shv0.S.__STACK__sect*)
        *(.lrt.shv0.S.__static_data*)
        *(.lrt.shv0.S.__HEAP__sect*)
        *(.lrt.shv0.S.__T__*)
        PROVIDE ( __shave0_cmx_data_end = . );
        PROVIDE ( lrt___shave0_cmx_data_end = . );
  }
  
  . = 0x70020000;
  __CMX_SLICE1_START = .;
  
  S.shv1.cmx.text ALIGN(4) : { 
        *(.shv1.S.text*)
        *(.shv1.S.__TEXT__sect)
        *(.shv1.S.__MAIN__sect)
        *(.shv1.S.init*)
        *(.lrt.shv1.S.text*)
        *(.lrt.shv1.S.__TEXT__sect)
        *(.lrt.shv1.S.__MAIN__sect)
        *(.lrt.shv1.S.init*)
  }
  S.shv1.cmx.data : { 
        *(.shv1.S.data*)
        *(.shv1.S.rodata*)
        *(.shv1.S.__DATA__sect*)
        *(.shv1.S.__STACK__sect*)
        *(.shv1.S.__static_data*)
        *(.shv1.S.__HEAP__sect*)
        *(.shv1.S.__T__*)
        *(.lrt.shv1.S.data*)
        *(.lrt.shv1.S.rodata*)
        *(.lrt.shv1.S.__DATA__sect*)
        *(.lrt.shv1.S.__STACK__sect*)
        *(.lrt.shv1.S.__static_data*)
        *(.lrt.shv1.S.__HEAP__sect*)
        *(.lrt.shv1.S.__T__*)
        PROVIDE ( __shave1_cmx_data_end = . );
        PROVIDE ( lrt___shave1_cmx_data_end = . );
  }  
  
  . = 0x70040000;
  __CMX_SLICE2_START = .; 
  S.shv2.cmx.text ALIGN(4) : { 
        *(.shv2.S.text*)
        *(.shv2.S.__TEXT__sect)
        *(.shv2.S.__MAIN__sect)
        *(.shv2.S.init*)
        *(.lrt.shv2.S.text*)
        *(.lrt.shv2.S.__TEXT__sect)
        *(.lrt.shv2.S.__MAIN__sect)
        *(.lrt.shv2.S.init*)
  }
  S.shv2.cmx.data : { 
        *(.shv2.S.data*)
        *(.shv2.S.rodata*)
        *(.shv2.S.__DATA__sect*)
        *(.shv2.S.__STACK__sect*)
        *(.shv2.S.__static_data*)
        *(.shv2.S.__HEAP__sect*)
        *(.shv2.S.__T__*)
        *(.lrt.shv2.S.data*)
        *(.lrt.shv2.S.rodata*)
        *(.lrt.shv2.S.__DATA__sect*)
        *(.lrt.shv2.S.__STACK__sect*)
        *(.lrt.shv2.S.__static_data*)
        *(.lrt.shv2.S.__HEAP__sect*)
        *(.lrt.shv2.S.__T__*)
        PROVIDE ( __shave2_cmx_data_end = . );
        PROVIDE ( lrt___shave2_cmx_data_end = . );
  }
  
  . = 0x70060000;
  __CMX_SLICE3_START = .; 
  S.shv3.cmx.text ALIGN(4) : { 
        *(.shv3.S.text*)
        *(.shv3.S.__TEXT__sect)
        *(.shv3.S.__MAIN__sect)
        *(.shv3.S.init*)
        *(.lrt.shv3.S.text*)
        *(.lrt.shv3.S.__TEXT__sect)
        *(.lrt.shv3.S.__MAIN__sect)
        *(.lrt.shv3.S.init*)
  }
  S.shv3.cmx.data : { 
        *(.shv3.S.data*)
        *(.shv3.S.rodata*)
        *(.shv3.S.__DATA__sect*)
        *(.shv3.S.__STACK__sect*)
        *(.shv3.S.__static_data*)
        *(.shv3.S.__HEAP__sect*)
        *(.shv3.S.__T__*)
        *(.lrt.shv3.S.data*)
        *(.lrt.shv3.S.rodata*)
        *(.lrt.shv3.S.__DATA__sect*)
        *(.lrt.shv3.S.__STACK__sect*)
        *(.lrt.shv3.S.__static_data*)
        *(.lrt.shv3.S.__HEAP__sect*)
        *(.lrt.shv3.S.__T__*)
        PROVIDE ( __shave3_cmx_data_end = . );
        PROVIDE ( lrt___shave3_cmx_data_end = . );
  }  
  
  . = 0x70080000;
  __CMX_SLICE4_START = .; 
  S.shv4.cmx.text ALIGN(4) : { 
        *(.shv4.S.text*)
        *(.shv4.S.__TEXT__sect)
        *(.shv4.S.__MAIN__sect)
        *(.shv4.S.init*)
        *(.lrt.shv4.S.text*)
        *(.lrt.shv4.S.__TEXT__sect)
        *(.lrt.shv4.S.__MAIN__sect)
        *(.lrt.shv4.S.init*)
  }
  S.shv4.cmx.data : { 
        *(.shv4.S.data*)
        *(.shv4.S.rodata*)
        *(.shv4.S.__DATA__sect*)
        *(.shv4.S.__STACK__sect*)
        *(.shv4.S.__static_data*)
        *(.shv4.S.__HEAP__sect*)
        *(.shv4.S.__T__*)
        *(.lrt.shv4.S.data*)
        *(.lrt.shv4.S.rodata*)
        *(.lrt.shv4.S.__DATA__sect*)
        *(.lrt.shv4.S.__STACK__sect*)
        *(.lrt.shv4.S.__static_data*)
        *(.lrt.shv4.S.__HEAP__sect*)
        *(.lrt.shv4.S.__T__*)
        PROVIDE ( __shave4_cmx_data_end = . );
        PROVIDE ( lrt___shave4_cmx_data_end = . );
  }

  . = 0x700A0000;
  __CMX_SLICE5_START = .; 
  S.shv5.cmx.text ALIGN(4) : { 
        *(.shv5.S.text*)
        *(.shv5.S.__TEXT__sect)
        *(.shv5.S.__MAIN__sect)
        *(.shv5.S.init*)
        *(.lrt.shv5.S.text*)
        *(.lrt.shv5.S.__TEXT__sect)
        *(.lrt.shv5.S.__MAIN__sect)
        *(.lrt.shv5.S.init*)
  }
  S.shv5.cmx.data : { 
        *(.shv5.S.data*)
        *(.shv5.S.rodata*)
        *(.shv5.S.__DATA__sect*)
        *(.shv5.S.__STACK__sect*)
        *(.shv5.S.__static_data*)
        *(.shv5.S.__HEAP__sect*)
        *(.shv5.S.__T__*)
        *(.lrt.shv5.S.data*)
        *(.lrt.shv5.S.rodata*)
        *(.lrt.shv5.S.__DATA__sect*)
        *(.lrt.shv5.S.__STACK__sect*)
        *(.lrt.shv5.S.__static_data*)
        *(.lrt.shv5.S.__HEAP__sect*)
        *(.lrt.shv5.S.__T__*)
        PROVIDE ( __shave5_cmx_data_end = . );
        PROVIDE ( lrt___shave5_cmx_data_end = . );
  }
  
  . = 0x700C0000;
  __CMX_SLICE6_START = .; 
  S.shv6.cmx.text ALIGN(4) : { 
        *(.shv6.S.text*)
        *(.shv6.S.__TEXT__sect)
        *(.shv6.S.__MAIN__sect)
        *(.shv6.S.init*)
        *(.lrt.shv6.S.text*)
        *(.lrt.shv6.S.__TEXT__sect)
        *(.lrt.shv6.S.__MAIN__sect)
        *(.lrt.shv6.S.init*)
  }
  S.shv6.cmx.data : { 
        *(.shv6.S.data*)
        *(.shv6.S.rodata*)
        *(.shv6.S.__DATA__sect*)
        *(.shv6.S.__STACK__sect*)
        *(.shv6.S.__static_data*)
        *(.shv6.S.__HEAP__sect*)
        *(.shv6.S.__T__*)
        *(.lrt.shv6.S.data*)
        *(.lrt.shv6.S.rodata*)
        *(.lrt.shv6.S.__DATA__sect*)
        *(.lrt.shv6.S.__STACK__sect*)
        *(.lrt.shv6.S.__static_data*)
        *(.lrt.shv6.S.__HEAP__sect*)
        *(.lrt.shv6.S.__T__*)
        PROVIDE ( __shave6_cmx_data_end = . );
        PROVIDE ( lrt___shave6_cmx_data_end = . );
  }  
  
  . = 0x700E0000;
  __CMX_SLICE7_START = .; 
  S.shv7.cmx.text ALIGN(4) : { 
        *(.shv7.S.text*)
        *(.shv7.S.__TEXT__sect)
        *(.shv7.S.__MAIN__sect)
        *(.shv7.S.init*)
        *(.lrt.shv7.S.text*)
        *(.lrt.shv7.S.__TEXT__sect)
        *(.lrt.shv7.S.__MAIN__sect)
        *(.lrt.shv7.S.init*)
  }
  S.shv7.cmx.data : { 
        *(.shv7.S.data*)
        *(.shv7.S.rodata*)
        *(.shv7.S.__DATA__sect*)
        *(.shv7.S.__STACK__sect*)
        *(.shv7.S.__static_data*)
        *(.shv7.S.__HEAP__sect*)
        *(.shv7.S.__T__*)
        *(.lrt.shv7.S.data*)
        *(.lrt.shv7.S.rodata*)
        *(.lrt.shv7.S.__DATA__sect*)
        *(.lrt.shv7.S.__STACK__sect*)
        *(.lrt.shv7.S.__static_data*)
        *(.lrt.shv7.S.__HEAP__sect*)
        *(.lrt.shv7.S.__T__*)
        PROVIDE ( __shave7_cmx_data_end = . );
        PROVIDE ( lrt___shave7_cmx_data_end = . );
  }
  
  . = 0x70100000;
  __CMX_SLICE8_START = .; 
  S.shv8.cmx.text ALIGN(4) : { 
        *(.shv8.S.text*)
        *(.shv8.S.__TEXT__sect)
        *(.shv8.S.__MAIN__sect)
        *(.shv8.S.init*)
        *(.lrt.shv8.S.text*)
        *(.lrt.shv8.S.__TEXT__sect)
        *(.lrt.shv8.S.__MAIN__sect)
        *(.lrt.shv8.S.init*)
  }
  S.shv8.cmx.data : { 
        *(.shv8.S.data*)
        *(.shv8.S.rodata*)
        *(.shv8.S.__DATA__sect*)
        *(.shv8.S.__STACK__sect*)
        *(.shv8.S.__static_data*)
        *(.shv8.S.__HEAP__sect*)
        *(.shv8.S.__T__*)
        *(.lrt.shv8.S.data*)
        *(.lrt.shv8.S.rodata*)
        *(.lrt.shv8.S.__DATA__sect*)
        *(.lrt.shv8.S.__STACK__sect*)
        *(.lrt.shv8.S.__static_data*)
        *(.lrt.shv8.S.__HEAP__sect*)
        *(.lrt.shv8.S.__T__*)
        PROVIDE ( __shave8_cmx_data_end = . );
        PROVIDE ( lrt___shave8_cmx_data_end = . );
  }
  
  . = 0x70120000;
  __CMX_SLICE9_START = .; 
  S.shv9.cmx.text ALIGN(4) : { 
        *(.shv9.S.text*)
        *(.shv9.S.__TEXT__sect)
        *(.shv9.S.__MAIN__sect)
        *(.shv9.S.init*)
        *(.lrt.shv9.S.text*)
        *(.lrt.shv9.S.__TEXT__sect)
        *(.lrt.shv9.S.__MAIN__sect)
        *(.lrt.shv9.S.init*)
  }
  S.shv9.cmx.data : { 
        *(.shv9.S.data*)
        *(.shv9.S.rodata*)
        *(.shv9.S.__DATA__sect*)
        *(.shv9.S.__STACK__sect*)
        *(.shv9.S.__static_data*)
        *(.shv9.S.__HEAP__sect*)
        *(.shv9.S.__T__*)
        *(.lrt.shv9.S.data*)
        *(.lrt.shv9.S.rodata*)
        *(.lrt.shv9.S.__DATA__sect*)
        *(.lrt.shv9.S.__STACK__sect*)
        *(.lrt.shv9.S.__static_data*)
        *(.lrt.shv9.S.__HEAP__sect*)
        *(.lrt.shv9.S.__T__*)
        PROVIDE ( __shave9_cmx_data_end = . );
        PROVIDE ( lrt___shave9_cmx_data_end = . );
  }
  
  . = 0x70140000;
  __CMX_SLICE10_START = .; 
  S.shv10.cmx.text ALIGN(4) : { 
        *(.shv10.S.text*)
        *(.shv10.S.__TEXT__sect)
        *(.shv10.S.__MAIN__sect)
        *(.shv10.S.init*)
        *(.lrt.shv10.S.text*)
        *(.lrt.shv10.S.__TEXT__sect)
        *(.lrt.shv10.S.__MAIN__sect)
        *(.lrt.shv10.S.init*)
  }
  S.shv10.cmx.data : { 
        *(.shv10.S.data*)
        *(.shv10.S.rodata*)
        *(.shv10.S.__DATA__sect*)
        *(.shv10.S.__STACK__sect*)
        *(.shv10.S.__static_data*)
        *(.shv10.S.__HEAP__sect*)
        *(.shv10.S.__T__*)
        *(.lrt.shv10.S.data*)
        *(.lrt.shv10.S.rodata*)
        *(.lrt.shv10.S.__DATA__sect*)
        *(.lrt.shv10.S.__STACK__sect*)
        *(.lrt.shv10.S.__static_data*)
        *(.lrt.shv10.S.__HEAP__sect*)
        *(.lrt.shv10.S.__T__*)
        PROVIDE ( __shave10_cmx_data_end = . );
        PROVIDE ( lrt___shave10_cmx_data_end = . );
  }
  
  . = 0x70160000;
  __CMX_SLICE11_START = .; 
  S.shv11.cmx.text ALIGN(4) : { 
        *(.shv11.S.text*)
        *(.shv11.S.__TEXT__sect)
        *(.shv11.S.__MAIN__sect)
        *(.shv11.S.init*)
        *(.lrt.shv11.S.text*)
        *(.lrt.shv11.S.__TEXT__sect)
        *(.lrt.shv11.S.__MAIN__sect)
        *(.lrt.shv11.S.init*)
  }
  S.shv11.cmx.data : { 
        *(.shv11.S.data*)
        *(.shv11.S.rodata*)
        *(.shv11.S.__DATA__sect*)
        *(.shv11.S.__STACK__sect*)
        *(.shv11.S.__static_data*)
        *(.shv11.S.__HEAP__sect*)
        *(.shv11.S.__T__*)
        *(.lrt.shv11.S.data*)
        *(.lrt.shv11.S.rodata*)
        *(.lrt.shv11.S.__DATA__sect*)
        *(.lrt.shv11.S.__STACK__sect*)
        *(.lrt.shv11.S.__static_data*)
        *(.lrt.shv11.S.__HEAP__sect*)
        *(.lrt.shv11.S.__T__*)
        PROVIDE ( __shave11_cmx_data_end = . );
        PROVIDE ( lrt___shave11_cmx_data_end = . );
  }
  
  __NEXT_FREE_CMX_SLICE = ALIGN(4);
  
  . = 0x70200000;
  __CMX_END = .;
  
}

/*The following are empty sections but we just need to make sure their symbols get pulled in*/

SECTIONS {

  . = 0x1D000000;
  S.shvdynamic.text ALIGN(4) : {
        *(.dyn.text*)
  }

  . = 0x1C000000;
  S.shvdynamic.data : {
        *(.dyn.data*)
  }

}

