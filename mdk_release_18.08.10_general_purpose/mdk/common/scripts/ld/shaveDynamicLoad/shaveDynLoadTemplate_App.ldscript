SECTIONS {
  /*Make sure on the data side of CMNlibs NOLOAD is used but addresses for data sections are virtual*/
  S.shvX.cmx.data.ZZZZZZZZZ 0x1C000000 (NOLOAD) : { 
        *(.shvX.ZZZZZZZZZ.S.data*)
        *(.shvX.ZZZZZZZZZ.S.__DATA__sect*)
        *(.shvX.ZZZZZZZZZ.S.__STACK__sect*)
        *(.shvX.ZZZZZZZZZ.S.__static_data*)
        *(.shvX.ZZZZZZZZZ.S.__HEAP__sect*)
        *(.shvX.ZZZZZZZZZ.S.__T__*)
        . = ALIGN(16);
        __ZZZZZZZZZ_appbss_sectionStart = .;
        *(.shvX.ZZZZZZZZZ.S.bss*)
        . = ALIGN(16);
        __ZZZZZZZZZ_appbss_sectionEnd = .;
  }
  S.lrt.shvX.cmx.data.ZZZZZZZZZ 0x1C000000 (NOLOAD) : {      
        *(.lrt.shvX.ZZZZZZZZZ.S.data*)
        *(.lrt.shvX.ZZZZZZZZZ.S.__DATA__sect*)
        *(.lrt.shvX.ZZZZZZZZZ.S.__STACK__sect*)
        *(.lrt.shvX.ZZZZZZZZZ.S.__static_data*)
        *(.lrt.shvX.ZZZZZZZZZ.S.__HEAP__sect*)
        *(.lrt.shvX.ZZZZZZZZZ.S.__T__*)
        . = ALIGN(16);
        lrt___ZZZZZZZZZ_appbss_sectionStart = .;
        *(.lrt.shvX.ZZZZZZZZZ.S.bss*)
        . = ALIGN(16);
        lrt___ZZZZZZZZZ_appbss_sectionEnd = .;
  }


  /*Make sure also the critical CMX section is also noload since it's going to be loaded via shvdlibload*/
  S.shvX.cmx.criticalZZZZZZZZZ 0x1D000000 (NOLOAD) : {
  		*(.shvX.ZZZZZZZZZ..textCrit*)
  }
  S.lrt.shvX.cmx.criticalZZZZZZZZZ 0x1D000000 (NOLOAD) : {
  		*(.lrt.shvX.ZZZZZZZZZ..textCrit*)
  }
}

SECTIONS {
    S.shvALL.shvX.ddr_cached.sections.iat.ZZZZZZZZZ : {
      . = ALIGN(16);
      ZZZZZZZZZ__iat_array_start = .;
      KEEP(*(.shvX.ZZZZZZZZZ.S..iat))
      KEEP(*(.lrt.shvX.ZZZZZZZZZ.S..iat))
      ZZZZZZZZZ__iat_array_end = .;
  } > DDR_DATA

  S.shvALL.shvX.ddr_cached.sections.iatnames.ZZZZZZZZZ : {
      . = ALIGN(16);
      ZZZZZZZZZ__iatnames_array_start = .;
      KEEP(*(.shvX.ZZZZZZZZZ.S..iatnames))
      KEEP(*(.lrt.shvX.ZZZZZZZZZ.S..iatnames))
      ZZZZZZZZZ__iatnames_array_end = .;
  } > DDR_DATA

  S.shvALL.shvX.ddr_cached.sections.iatstrings.ZZZZZZZZZ : {
      . = ALIGN(16);  
      ZZZZZZZZZ__iatstrings_array_start = .;
      *(.shvX.ZZZZZZZZZ.S..iatstrings)
      *(.lrt.shvX.ZZZZZZZZZ.S..iatstrings)
      ZZZZZZZZZ__iatstrings_array_end = .;  
  } > DDR_DATA
}
