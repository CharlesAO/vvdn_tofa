<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" version="2.1">
<key attr.name="includes" attr.type="string" for="graph" id="includes"/>
<key attr.name="binary" attr.type="string" for="graph" id="binary"/>
<key attr.name="shaveFirst" attr.type="int" for="graph" id="shaveFirst"/>
<key attr.name="shaveLast" attr.type="int" for="graph" id="shaveLast"/>
<key attr.name="mkPath" attr.type="string" for="graph" id="mkPath"/>
<key attr.name="myriadTarget" attr.type="int" for="graph" id="myriadTarget"/>
<key attr.name="id" attr.type="string" for="node" id="id"/>
<key attr.name="name" attr.type="string" for="node" id="name"/>
<key attr.name="description" attr.type="string" for="node" id="description"/>
<key attr.name="flags" attr.type="string" for="node" id="flags"/>
<key attr.name="dataType" attr.type="string" for="node" id="dataType"/>
<key attr.name="outW" attr.type="string" for="node" id="outW"/>
<key attr.name="outH" attr.type="string" for="node" id="outH"/>
<key attr.name="numPl" attr.type="string" for="node" id="numPl"/>
<key attr.name="symbol" attr.type="string" for="node" id="symbol"/>
<key attr.name="x" attr.type="int" for="node" id="x"/>
<key attr.name="y" attr.type="int" for="node" id="y"/>
<key attr.name="w" attr.type="int" for="node" id="w"/>
<key attr.name="h" attr.type="int" for="node" id="h"/>
<key attr.name="internal0" attr.type="string" for="node" id="internal0"/>
<key attr.name="internal1" attr.type="string" for="node" id="internal1"/>
<key attr.name="cfg" attr.type="string" for="node" id="cfg"/>
<key attr.name="krgb" attr.type="string" for="node" id="krgb"/>
<key attr.name="ccm" attr.type="string" for="node" id="ccm"/>
<key attr.name="ccOffs" attr.type="string" for="node" id="ccOffs"/>
<key attr.name="threeDLut" attr.type="string" for="node" id="threeDLut"/>
<key attr.name="lutFormat" attr.type="string" for="node" id="lutFormat"/>
<key attr.name="index" attr.type="int" for="edge" id="index"/>
<key attr.name="inputIndex" attr.type="int" for="edge" id="inputIndex"/>
<key attr.name="outputIndex" attr.type="int" for="edge" id="outputIndex"/>
<key attr.name="kernel" attr.type="string" for="edge" id="kernel"/>
<graph edgedefault="directed" id="Pipeline">
<data key="includes">testHwColorCombSetup.h</data>
<data key="binary">mbinImgSipp</data>
<data key="shaveFirst">0</data>
<data key="shaveLast">7</data>
<data key="mkPath">../build/sipp/</data>
<data key="myriadTarget">MA2x5x</data>
<node id="0">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">SIPP_HW_COL_COMB_LUMA_BUFFER_NUM_PLANES</data>
</node>
<data key="name">dmaIn0</data>
<data key="id">dmaIn</data>
<data key="description">DMA in filter</data>
<data key="flags">0x00</data>
<data key="outW">SIPP_HW_COL_COMB_LUMA_BUFFER_WIDTH</data>
<data key="outH">SIPP_HW_COL_COMB_LUMA_BUFFER_HEIGHT</data>
<data key="symbol">SIPP_DMA_ID</data>
<data key="x">140</data>
<data key="y">83</data>
<data key="w">75</data>
<data key="h">75</data>
<data key="internal0">auto</data>
<data key="internal1">../../../../../../../resources/OCT_1584x1290_I_Chroma_block__luma_8bpp.raw</data>
</node>
<node id="1">
<node id="outputbuffer0">
<data key="dataType">UInt16</data>
<data key="numPl">SIPP_HW_COL_COMB_BUFFER_NUM_PLANES</data>
</node>
<data key="name">colorcombMa2x5x0</data>
<data key="id">colorcombMa2x5x</data>
<data key="description">The Color Combination filter takes Chrominance and Luminance data that was separated from RGB previously, for the purposes of independent filtering.</data>
<data key="flags">0x0</data>
<data key="outW">SIPP_HW_COL_COMB_BUFFER_WIDTH</data>
<data key="outH">SIPP_HW_COL_COMB_BUFFER_HEIGHT</data>
<data key="symbol">SIPP_CC_ID</data>
<data key="x">301</data>
<data key="y">246</data>
<data key="w">75</data>
<data key="h">75</data>
<data key="cfg">CC_CFG(FORCE_LUMA_ONE,0,LUT_3D_BYPASS,LUT_3D_LOAD,U12F_OUTPUT,OUTPUT_PLANE_MULT)</data>
<data key="krgb">K_R | (K_G &lt;&lt; 16),(K_B | (EPSILON &lt;&lt; 16))</data>
<data key="ccm">(colCorrMatrix[0] | colCorrMatrix[1] &lt;&lt; 16),(colCorrMatrix[2] | colCorrMatrix[3] &lt;&lt; 16),(colCorrMatrix[4] | colCorrMatrix[5] &lt;&lt; 16),(colCorrMatrix[6] | colCorrMatrix[7] &lt;&lt; 16),(colCorrMatrix[8] | R_OFF &lt;&lt; 16)</data>
<data key="ccOffs">(G_OFF | B_OFF &lt;&lt; 16)</data>
<data key="threeDLut">Lut3D</data>
<data key="lutFormat">0x2</data>
</node>
<node id="2">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">SIPP_HW_COL_COMB_CHR_BUFFER_NUM_PLANES</data>
</node>
<data key="name">dmaIn1</data>
<data key="id">dmaIn</data>
<data key="description">DMA in filter</data>
<data key="flags">0x00</data>
<data key="outW">SIPP_HW_COL_COMB_CHR_BUFFER_WIDTH</data>
<data key="outH">SIPP_HW_COL_COMB_CHR_BUFFER_HEIGHT</data>
<data key="symbol">SIPP_DMA_ID</data>
<data key="x">458</data>
<data key="y">78</data>
<data key="w">75</data>
<data key="h">75</data>
<data key="internal0">auto</data>
<data key="internal1">../../../../../../../resources/OCT_792x645_I_chroma_block__chroma_8bpp.raw</data>
</node>
<node id="3">
<node id="outputbuffer0">
<data key="dataType">UInt16</data>
<data key="numPl">SIPP_HW_COL_COMB_BUFFER_NUM_PLANES</data>
</node>
<data key="name">dmaOut0</data>
<data key="id">dmaOut</data>
<data key="description">DMA out filter</data>
<data key="flags">0x00</data>
<data key="outW">SIPP_HW_COL_COMB_BUFFER_WIDTH</data>
<data key="outH">SIPP_HW_COL_COMB_BUFFER_HEIGHT</data>
<data key="symbol">SIPP_DMA_ID</data>
<data key="x">305</data>
<data key="y">407</data>
<data key="w">75</data>
<data key="h">75</data>
<data key="internal0">auto</data>
<data key="internal1">colorCombOutput.raw</data>
</node>
<edge id="0" source="0" target="1">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">1x1</data>
</edge>
<edge id="1" source="1" target="3">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">1x1</data>
</edge>
<edge id="2" source="2" target="1">
<data key="index">1</data>
<data key="inputIndex">1</data>
<data key="outputIndex">0</data>
<data key="kernel">5x5</data>
</edge>
</graph>
</graphml>
