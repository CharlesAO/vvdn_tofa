<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" version="2.1">
<key attr.name="includes" attr.type="string" for="graph" id="includes"/>
<key attr.name="binary" attr.type="string" for="graph" id="binary"/>
<key attr.name="shaveFirst" attr.type="int" for="graph" id="shaveFirst"/>
<key attr.name="shaveLast" attr.type="int" for="graph" id="shaveLast"/>
<key attr.name="mkPath" attr.type="string" for="graph" id="mkPath"/>
<key attr.name="myriadTarget" attr.type="int" for="graph" id="myriadTarget"/>
<key attr.name="id" attr.type="string" for="node" id="id"/>
<key attr.name="name" attr.type="string" for="node" id="name"/>
<key attr.name="description" attr.type="string" for="node" id="description"/>
<key attr.name="flags" attr.type="string" for="node" id="flags"/>
<key attr.name="dataType" attr.type="string" for="node" id="dataType"/>
<key attr.name="outW" attr.type="string" for="node" id="outW"/>
<key attr.name="outH" attr.type="string" for="node" id="outH"/>
<key attr.name="numPl" attr.type="string" for="node" id="numPl"/>
<key attr.name="symbol" attr.type="string" for="node" id="symbol"/>
<key attr.name="x" attr.type="int" for="node" id="x"/>
<key attr.name="y" attr.type="int" for="node" id="y"/>
<key attr.name="w" attr.type="int" for="node" id="w"/>
<key attr.name="h" attr.type="int" for="node" id="h"/>
<key attr.name="internal0" attr.type="string" for="node" id="internal0"/>
<key attr.name="internal1" attr.type="string" for="node" id="internal1"/>
<key attr.name="eMat" attr.type="string" for="node" id="eMat"/>
<key attr.name="dMat" attr.type="string" for="node" id="dMat"/>
<key attr.name="cfg" attr.type="string" for="node" id="cfg"/>
<key attr.name="sizeA" attr.type="string" for="node" id="sizeA"/>
<key attr.name="sizeB" attr.type="string" for="node" id="sizeB"/>
<key attr.name="lut" attr.type="string" for="node" id="lut"/>
<key attr.name="lutFormat" attr.type="string" for="node" id="lutFormat"/>
<key attr.name="mat" attr.type="string" for="node" id="mat"/>
<key attr.name="offset" attr.type="string" for="node" id="offset"/>
<key attr.name="index" attr.type="int" for="edge" id="index"/>
<key attr.name="inputIndex" attr.type="int" for="edge" id="inputIndex"/>
<key attr.name="outputIndex" attr.type="int" for="edge" id="outputIndex"/>
<key attr.name="kernel" attr.type="string" for="edge" id="kernel"/>
<graph edgedefault="directed" id="Pipeline">
<data key="includes">sippModelParams.h</data>
<data key="binary">mbinImgSipp</data>
<data key="shaveFirst">0</data>
<data key="shaveLast">6</data>
<data key="mkPath">../</data>
<data key="myriadTarget">MA2x5x</data>
<node id="0">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">dmaIn0</data>
<data key="id">dmaIn</data>
<data key="description">DMA in filter</data>
<data key="flags">0x00</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">SIPP_DMA_ID</data>
<data key="x">158</data>
<data key="y">157</data>
<data key="w">75</data>
<data key="h">75</data>
<data key="internal0">iBuf[0]</data>
<data key="internal1"/>
</node>
<node id="1">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">erode3x30</data>
<data key="id">erode3x3</data>
<data key="description">This filter applies the erode filter on the source image using the specified structuring element.</data>
<data key="flags">0x0</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">svuErode3x3</data>
<data key="x">309</data>
<data key="y">312</data>
<data key="w">88</data>
<data key="h">87</data>
<data key="eMat">&amp;erodeMat[0], &amp;erodeMat[3], &amp;erodeMat[6]</data>
</node>
<node id="2">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">dilate3x30</data>
<data key="id">dilate3x3</data>
<data key="description">This filter performs a dilate on the source image using the specified structuring element.</data>
<data key="flags">0x0</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">svuDilate3x3</data>
<data key="x">486</data>
<data key="y">309</data>
<data key="w">89</data>
<data key="h">91</data>
<data key="dMat">&amp;dilateMat[0], &amp;dilateMat[3], &amp;dilateMat[6]</data>
</node>
<node id="3">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">dmaOut0</data>
<data key="id">dmaOut</data>
<data key="description">DMA out filter</data>
<data key="flags">0x00</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">SIPP_DMA_ID</data>
<data key="x">653</data>
<data key="y">461</data>
<data key="w">86</data>
<data key="h">83</data>
<data key="internal0">oBuf[0]</data>
<data key="internal1"/>
</node>
<node id="4">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">sobel0</data>
<data key="id">sobel</data>
<data key="description">This filter performs sobel edge detection operator.</data>
<data key="flags">0x0</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">svuSobel</data>
<data key="x">315</data>
<data key="y">152</data>
<data key="w">78</data>
<data key="h">83</data>
</node>
<node id="5">
<node id="outputbuffer0">
<data key="dataType">UInt8</data>
<data key="numPl">1</data>
</node>
<data key="name">lutMa2x5x0</data>
<data key="id">lutMa2x5x</data>
<data key="description">The LUT is a highly flexible lookup table which can be used for tonal curve or gamma application, or other complex functions.</data>
<data key="flags">0x0</data>
<data key="outW">1920</data>
<data key="outH">1080</data>
<data key="symbol">SIPP_LUT_ID</data>
<data key="x">489</data>
<data key="y">461</data>
<data key="w">91</data>
<data key="h">85</data>
<data key="cfg">(0      )  | (0  &lt;&lt; 1)  | (8  &lt;&lt; 3) | (0  &lt;&lt; 8)</data>
<data key="sizeA">0x44444444</data>
<data key="sizeB">0x44444444</data>
<data key="lut">lutTab</data>
<data key="lutFormat">LUT_LD_FORMAT</data>
<data key="mat">0, 0, 0, 0, 0, 0, 0, 0, 0</data>
<data key="offset">0, 0, 0</data>
</node>
<edge id="0" source="0" target="4">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">3x3</data>
</edge>
<edge id="1" source="1" target="2">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">3x3</data>
</edge>
<edge id="2" source="2" target="5">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">1x1</data>
</edge>
<edge id="3" source="4" target="1">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">3x3</data>
</edge>
<edge id="4" source="5" target="3">
<data key="index">0</data>
<data key="inputIndex">0</data>
<data key="outputIndex">0</data>
<data key="kernel">1x1</data>
</edge>
</graph>
</graphml>
