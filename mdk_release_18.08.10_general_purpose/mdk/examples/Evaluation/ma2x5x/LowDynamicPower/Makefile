# ------------------------------[ General Settings ]--------------------------------------#
MV_SOC_REV      ?= ma2450

#The Movidius dev kits are 2: MV0212 equipped with MA2450 and MV0182 equipped with
#other revisions(MA2150)
ifeq ($(MV_SOC_REV),ma2450)
 EVM_BOARD_USED = MV0212
else
 EVM_BOARD_USED = MV0182
endif
# Selects the default startup processor (options LOS or LRT) (When not specified Leon OS is the default)

# Set MV_COMMON_BASE relative to mdk directory location (but allow user to override in environment)
MV_COMMON_BASE ?= ../../../../common

# Automated Test Settings
TEST_HW_PLATFORM := "MV0182_MA2150, MV0212_MA2450"
TEST_TYPE        := "AUTO"
TEST_TAGS        := "MA2150, MA2450"

# ------------------------------[ Tools ]------------------------------------------#
# Hardcode tool version here if needed, otherwise defaults to revision defined in mdk/common/tools_settings.mk

#------------------------------[ Build overrides ]--------------------------------#
# Note: If your project needs a custom linker script create a file called custom.ldscript
# in the project config folder. This will be automatically picked up.

# App related build options
MY_RESOURCE=$(MV_EXTRA_DATA)/CobKitchen_1280x720.yuv

# ------------------------------[ Components used ]--------------------------------#

# This provides the unit test framework and hooks into the VCS environment
ifeq ($(EVM_BOARD_USED),MV0182)
 ComponentList_LOS  = Board182
else
 ComponentList_LOS = MV0212
endif
ComponentList_LOS  += UnitTest VcsHooks PipePrint
ComponentList_SVE := kernelLib/MvCV
SHAVE_COMPONENTS = no

#-------------------[ Define the sources and objects for each Shave APP ]---------#

# Calling this shave library sampleApp and setting its home location in the shave folder
sampleApp = shave/MaxFlops

# Choosing CPP and assembly sources the SampleApp application on shave
SHAVE_CPP_SOURCES_sampleApp    = $(wildcard $(DirAppRoot)/shave/*.cpp)
#Choosing asm shave local sources
SHAVE_ASM_SOURCES_sampleApp   = $(MV_COMMON_BASE)/components/kernelLib/MvCV/kernels/convolution3x3/arch/ma2x5x/shave/src/convolution3x3.asm
SHAVE_ASM_SOURCES_sampleApp  += $(MV_COMMON_BASE)/components/kernelLib/MvCV/kernels/convolution5x5/arch/ma2x5x/shave/src/convolution5x5.asm
SHAVE_ASM_SOURCES_sampleApp  += $(MV_COMMON_BASE)/components/kernelLib/MvCV/kernels/convolution7x7/arch/ma2x5x/shave/src/convolution7x7.asm


# C compilation is a two stage process, this rule declares the intermediate asmgen file list
SHAVE_GENASMS_sampleApp = $(patsubst %.cpp,$(DirAppObjBase)%.asmgen,$(SHAVE_CPP_SOURCES_sampleApp))

# Generating required objects list from source lists
SHAVE_OBJS_sampleApp  = $(patsubst %.cpp,$(DirAppObjBase)%_shave.o,$(SHAVE_CPP_SOURCES_sampleApp))
SHAVE_OBJS_sampleApp += $(patsubst %.asm,$(DirAppObjBase)%_shave.o,$(SHAVE_ASM_SOURCES_sampleApp))

# update clean rules with a list of the applications objects and intermediate files
PROJECTCLEAN += $(SHAVE_GENASMS_sampleApp) $(SHAVE_OBJS_sampleApp)

# By default the make system doesn't delete the intermediate asmgen files so that the user
# can review the assembly code generated by the compiler
# Uncomment the following line to have the asmgen files deleted automatically
PROJECTINTERM += $(SHAVE_GENASMS_sampleApp)

#-----------------------[ Shave Application Assignment ]------------------#
# This lists all the libraries that need to be built for the shaves in general
SHAVE_APP_LIBS = $(sampleApp).mvlib

# The following lines specify which application instances go on each shave (.shvxlib)
# Each declaration of a .shvxlib will result in an instance of the mvlib of the same name
# being generated for shave x
SHAVE0_APPS  = $(sampleApp).shv0lib
SHAVE1_APPS = $(sampleApp).shv1lib
SHAVE2_APPS = $(sampleApp).shv2lib
SHAVE3_APPS = $(sampleApp).shv3lib
SHAVE4_APPS = $(sampleApp).shv4lib
SHAVE5_APPS = $(sampleApp).shv5lib
SHAVE6_APPS = $(sampleApp).shv6lib
SHAVE7_APPS = $(sampleApp).shv7lib
SHAVE8_APPS = $(sampleApp).shv8lib
SHAVE9_APPS = $(sampleApp).shv9lib
SHAVE10_APPS = $(sampleApp).shv10lib
SHAVE11_APPS = $(sampleApp).shv11lib

#RAWDATAOBJECTFILES += $(DirAppObjDir)/testframe.o

#--------------------------[ Include common makefile rules ]--------------------------

include $(MV_COMMON_BASE)/generic.mk

#--------------------------[ Rules to build Shave Libraries ]--------------------------

# This rule defines a library (relocatable elf) containing all the Objects required for the specific
# shave application. This library may then be instantiated one or more times on differnent shaves (as shvXlibs)
ENTRYPOINTS = -u AppStart3KernelsStripes --gc-sections

$(sampleApp).mvlib : $(SHAVE_OBJS_sampleApp) $(PROJECT_SHAVE_LIBS)
	@echo "Shave App LIB         : $(sampleApp).mvlib"
	$(ECHO) $(LD) $(ENTRYPOINTS) $(MVLIBOPT) $(SHAVE_OBJS_sampleApp) $(PROJECT_SHAVE_LIBS) $(CompilerANSILibs) -o $@

# ------------------------------[ Extra Rules ]-------------------------------------------#
# Pass the path to the input file into the application
CCOPT += -DMV_EXTRA_DATA='"$(MY_RESOURCE)"'
CCOPT_LRT += -D$(EVM_BOARD_USED)
CCOPT     += -D$(EVM_BOARD_USED)
