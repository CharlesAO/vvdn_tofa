/* xdcdkern_types.h	Thu Jul 10 2014 15:42:37 tmm */

/*

Module:  xdcdkern_types.h

Function:
	Types for USBPUMP_DEVICE_XDCD

Version:
	V3.13a	Thu Jul 10 2014 15:42:37 tmm	Edit level 1

Copyright notice:
	This file copyright (C) 2014 by

		MCCI Corporation
		3520 Krums Corners Road
		Ithaca, NY  14850

	An unpublished work.  All rights reserved.
	
	This file is proprietary information, and may not be disclosed or
	copied without the prior permission of MCCI Corporation.
 
Author:
	Terry Moore, MCCI Corporation	July 2014

Revision history:
   3.13a  Thu Jul 10 2014 15:42:37  tmm
	18309: Module created.

*/

#ifndef _XDCDKERN_TYPES_H_		/* prevent multiple includes */
#define _XDCDKERN_TYPES_H_

#ifndef _USBPUMP_TYPES_H_
# include "usbpump_types.h"
#endif

/****************************************************************************\
|
|	The forward type references
|
\****************************************************************************/

__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_MESSAGE_EVENT);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_EVENT_BUFFER);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_CORE_STATUS);

__TMS_TYPE_DEF_ARG(USBPUMP_XDCD_EVENT,		UINT32);

/* DCD types */
__TMS_TYPE_DEF_STRUCT(USBPUMP_DEVICE_XDCD);
__TMS_TYPE_DEF_STRUCT(USBPUMP_ENDPOINT_XDCD);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_CONFIGURATION_INFO);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_IOTRACE);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_TRANSFER_DESCRIPTOR);
__TMS_TYPE_DEF_STRUCT(USBPUMP_XDCD_TRB);


/* function type for getting device information */
__TMS_FNTYPE_DEF(
	USBPUMP_XDCD_GET_BASE_ADDRESS_FN,
	__TMS_IOPORT,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd
		));

/* function type for DMA Cache Flush */
__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_DMA_FLUSH_FN,
	__TMS_VOID,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd,
		__TMS_VOID *			pBuffer,
		__TMS_UINT32			nBuffer
		));

/* function type for DMA Cache Invalidate */
__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_DMA_INVALIDATE_FN,
	__TMS_VOID,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd,
		__TMS_VOID *			pBuffer,
		__TMS_UINT32			nBuffer
		));

/* function type for getting physical address */
__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_GET_PHYSICAL_ADDR_FN,
	__TMS_PHYSADDR,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd,
		__TMS_VOID *			pBuffer
		));

/* function type for setting power state to D0 */
__TMS_FNTYPE_DEF(
	USBPUMP_XDCD_SET_POWER_STATE_TO_D0_FN,
	__TMS_BOOL,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd
		));

/* function type for setting power state to D3 */
__TMS_FNTYPE_DEF(
	USBPUMP_XDCD_SET_POWER_STATE_TO_D3_FN,
	__TMS_BOOL,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd
		));

/* function type for checking if PME is generated */
__TMS_FNTYPE_DEF(
	USBPUMP_XDCD_IS_PME_GENERATED_FN,
	__TMS_BOOL,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd
		));

/* function type for checking if connected to host */
__TMS_FNTYPE_DEF(
	USBPUMP_XDCD_IS_CONNECTED_TO_HOST_FN,
	__TMS_BOOL,
		(
		__TMS_USBPUMP_DEVICE_XDCD *	pDcd
		));

__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_ADD_EPTIMER_CLIENT_FN,
	__TMS_VOID,
		(
		__TMS_USBPUMP_DEVICE_XDCD *,    /* pDcd */
		__TMS_USBPUMP_ENDPOINT_XDCD *	/* pUep */
		));

__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_DELETE_EPTIMER_CLIENT_FN,
	__TMS_VOID,
		(
		__TMS_USBPUMP_DEVICE_XDCD *,    /* pDcd */
		__TMS_USBPUMP_ENDPOINT_XDCD *	/* pUep */
		));

/*

Type:  USBPUMP_XDCD_COPY_BUFFER_FN

Function:
	Copy data buffer to/from endpoint local buffer

Definition:
	typedef VOID
	(*USBPUMP_XDCD_COPY_BUFFER_FN)(
		USBPUMP_DEVICE_XDCD *	pDcd,
		USBPUMP_ENDPOINT_XDCD *	pUep
		);

Description:
	For IN endpoint, DCD will use this function to copy Tx data buffer to
	the endpoint local buffer and send packet.
	For OUT endpoint, DCD will use this function to copy Rx data buffer from
	the endpoint local buffer after receiving packet.

Returns:
	No explicit result.

*/

__TMS_TYPE_DEF_FUNCTION(
	USBPUMP_XDCD_COPY_BUFFER_FN,
	__TMS_USTAT,
		(
		__TMS_USBPUMP_DEVICE_XDCD *,	/* pDcd */
		__TMS_UBUFQE *,			/* pQe */
		__TMS_VOID *,			/* pBuffer */
		__TMS_BYTES			/* nBuffer */
		));

/****************************************************************************\
|
|	Parameters
|
\****************************************************************************/

#ifndef __TMS_WANT_XDCD_IO_TRACE		/*PARAM*/
/* we want I/O tracing by default iff this is a debug build. */
# define __TMS_WANT_XDCD_IO_TRACE	__TMS_USBPUMP_DEBUG
#endif

#ifndef __TMS_USBPUMP_XDCD_SCRATCHPAD_BUFFER_SIZE	/* PARAM */
# define __TMS_USBPUMP_XDCD_SCRATCHPAD_BUFFER_SIZE	(4 * 1024)
#endif

/****************************************************************************\
|
|	Uncloaking
|
\****************************************************************************/

/**** uncloaked names generated by uncloak-defs.sh ****/
#if !__TMS_CLOAKED_NAMES_ONLY
# define WANT_XDCD_IO_TRACE	\
   __TMS_WANT_XDCD_IO_TRACE
# define USBPUMP_XDCD_SCRATCHPAD_BUFFER_SIZE	\
   __TMS_USBPUMP_XDCD_SCRATCHPAD_BUFFER_SIZE
#endif /* !__TMS_CLOAKED_NAMES_ONLY */


/**** end of xdcdkern_types.h ****/
#endif /* _XDCDKERN_TYPES_H_ */
