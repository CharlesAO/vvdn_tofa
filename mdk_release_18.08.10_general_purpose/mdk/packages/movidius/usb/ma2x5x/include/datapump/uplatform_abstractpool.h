/* uplatform_abstractpool.h	Fri Sep 24 2015 09:01:17 skpark */

/*

Module:  uplatform_abstractpool.h

Function:
	Definition of UPLATFORM abstract pool

Version:
	V3.15d	Fri Nov 01 2013 12:05:53 skpark	Edit level 2

Copyright notice:
	This file copyright (C) 2013, 2015 by

		MCCI Corporation
		3520 Krums Corners Road
		Ithaca, NY  14850

	An unpublished work.  All rights reserved.

	This file is proprietary information, and may not be disclosed or
	copied without the prior permission of MCCI Corporation

Author:
	ChaeHee Won, MCCI Corporation	November 2013

Revision history:
   3.11d  Fri Nov 01 2013 12:05:53 chwon
	17827: Module created.

   3.15d  Fri Sep 24 2015 09:01:17 skpark
	17827: Added missing __TMS_ for UPLATFORM_CREATE_ABSTRACT_POOL_FN

*/

#ifndef _UPLATFORM_ABSTRACTPOOL_H_	/* prevent multiple includes */
#define _UPLATFORM_ABSTRACTPOOL_H_

#ifndef _UPLATFORM_H_
# include "uplatform.h"
#endif

#ifndef _USBPUMP_MEMPOOL_H_
# include "usbpump_mempool.h"
#endif

/****************************************************************************\
|
|	Definition of UPLATFORM_ABSTRACT_POOL
|
\****************************************************************************/

/* __TMS_TYPE_DEF_UNION(UPLATFORM_ABSTRACT_POOL);	in uplatform.h */
__TMS_TYPE_DEF_STRUCT(UPLATFORM_ABSTRACT_POOL_CONTENTS);
__TMS_TYPE_DEF_STRUCT(UPLATFORM_ABSTRACT_POOL_BLOCK);
__TMS_TYPE_DEF_STRUCT(UPLATFORM_ABSTRACT_POOL_BLOCK_HEADER);

struct __TMS_STRUCTNAME(UPLATFORM_ABSTRACT_POOL_BLOCK_HEADER)
	{
	__TMS_UPLATFORM_ABSTRACT_POOL_BLOCK *		pNext;
	__TMS_UPLATFORM_ABSTRACT_POOL_BLOCK *		pLast;

	/* Size of the block, in bytes, including waste space and the header */
	__TMS_ADDRBITS					Size;

	/* Pointer of the abstract pool. */
	__TMS_UPLATFORM_ABSTRACT_POOL *			pPlatformPool;
	};

__TMS_LIBPORT_C_ASSERT(sizeof(__TMS_ADDRBITS) == sizeof(__TMS_UPLATFORM_ABSTRACT_POOL *));

struct __TMS_STRUCTNAME(UPLATFORM_ABSTRACT_POOL_BLOCK)
	{
	__TMS_UPLATFORM_ABSTRACT_POOL_BLOCK_HEADER	Hdr;

	__TMS_TEXT					MemoryBlock[1];
	};

struct __TMS_STRUCTNAME(UPLATFORM_ABSTRACT_POOL_CONTENTS)
	{
	__TMS_USBPUMP_ABSTRACT_POOL_CONTENTS__STRUCT;

	/* Total bytes of memory pool */
	__TMS_BYTES					nTotalBytes;

	/* Number of bytes in use (raw) */
	__TMS_BYTES					nBytesInUse;

	/* Number of allocated memory blocks */
	__TMS_COUNT					nAllocatedBlocks;

	/* Allocated memory block list */
	__TMS_UPLATFORM_ABSTRACT_POOL_BLOCK *		pHead;

	/* Created abstract memory link information */
	__TMS_UPLATFORM_ABSTRACT_POOL *			pNext;
	__TMS_UPLATFORM_ABSTRACT_POOL *			pLast;
	};


union __TMS_UNIONNAME(UPLATFORM_ABSTRACT_POOL)
	{
	__TMS_USBPUMP_ABSTRACT_POOL_CONTENTS__UNION;

	__TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS		PlatformPool;
	};

#define __TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS__STRUCT		\
	__TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS	PlatformPool

#define __TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS__UNION		\
	__TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS	PlatformPool;	\
	__TMS_UPLATFORM_ABSTRACT_POOL		PlatformPoolCast


/****************************************************************************\
|
|	API functions
|
\****************************************************************************/

__TMS_BEGIN_DECLS

__TMS_UPLATFORM_CREATE_ABSTRACT_POOL_FN
UsbPumpPlatform_CreatePlatformAbstractPool;

__TMS_VOID
UsbPumpPlatform_DeletePlatformAbstractPool(
	__TMS_UPLATFORM *	/* pPlatform */
	);

__TMS_END_DECLS


/****************************************************************************\
|
|	Uncloaked names
|
\****************************************************************************/

/**** uncloaked names generated by uncloak-defs.sh ****/
#if !__TMS_CLOAKED_NAMES_ONLY
# define UPLATFORM_ABSTRACT_POOL_CONTENTS__STRUCT	\
   __TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS__STRUCT
# define UPLATFORM_ABSTRACT_POOL_CONTENTS__UNION	\
   __TMS_UPLATFORM_ABSTRACT_POOL_CONTENTS__UNION
#endif /* !__TMS_CLOAKED_NAMES_ONLY */

/**** end of uplatform_abstractpool.h ****/
#endif /* _UPLATFORM_ABSTRACTPOOL_H_ */
