/* usbringbuffer.h	Sun Mar 27 2011 11:52:05 maw */

/*

Module:	 usbringbuffer.h

Function:
	Ring buffer structures for doing rate adaptation between
	producer(s) and consumer(s)

Version:
	V3.01d	Sun Mar 27 2011 11:52:05 maw	Edit level 5

Copyright notice:
	This file copyright (C) 1997-2002, 2009, 2011 by

		MCCI Corporation
		3520 Krums Corners Road
		Ithaca, NY  14850

	An unpublished work.  All rights reserved.
    
	This file is proprietary information, and may not be disclosed or
	copied without the prior permission of MCCI Corporation
 
Author:
	Terry Moore, MCCI Corporation	February 1997

Revision history:
   1.00a  Sun Feb  9 1997 21:18:11  tmm
	Module created.

   1.79a  6/5/2002  tmm
	Reduce header file bloat.

   1.87a Tue Nov 18 2003 09:00:00 maw
   	Completed cloaking

   2.01a  Fri Jul 10 2009 12:07:24  chwon
	8367: Added UPLATFORM * in the USB_RING_BUFFER to use interlocked
	operations.  Added UsbRingBuffer_Init_V2() prototype.

   3.01d  Sun Mar 27 2011 11:52:05 maw
	13083: Add UsbRingBuffer_FreeBody()

*/

#ifndef _USBRINGBUFFER_H_	/* prevent multiple includes */
#define _USBRINGBUFFER_H_

#ifndef _USBPUMPENV_H_
# include "usbpumpenv.h"
#endif

/****************************************************************************\
|
|   The ring buffer structure....
|
\****************************************************************************/

__TMS_TYPE_DEF_STRUCT(USB_RING_BUFFER);

struct __TMS_STRUCTNAME(USB_RING_BUFFER)
	{
	__TMS_ULONG   urbuf_ulMagic1;	/* header tag */
	__TMS_UCHAR  *urbuf_base;	/* pointer to first byte of ring buf */
	__TMS_UCHAR  *urbuf_end;	/* pointer to last byte of ring buf, +1 */
	__TMS_UCHAR  *urbuf_head;	/* removal pointer */
	__TMS_UCHAR  *urbuf_tail;	/* insertion pointer */
	__TMS_ULONG   urbuf_nWritten;	/* number of bytes written */
	__TMS_ULONG   urbuf_nRead;	/* number of bytes read */
	__TMS_UCHAR  *urbuf_copyptr;	/* pointer in ring buf we're currently copying to */
	__TMS_UPLATFORM *urbuf_pPlatform; /* needs interlocked operations */
	__TMS_ULONG   urbuf_ulMagic2;   /* trailer tag */
	};

#define __TMS_USB_RING_BUFFER_ULMAGIC1	__TMS_UHIL_MEMTAG('R', 'B', 'U', 'F')
#define __TMS_USB_RING_BUFFER_ULMAGIC2	__TMS_UHIL_MEMTAG('r', 'b', 'u', 'f')

/*
|| rigorously validate a ring buffer
*/
#define __TMS_USB_RING_BUFFER_VALID(prbuf)				\
	((prbuf)->urbuf_ulMagic1 == __TMS_USB_RING_BUFFER_ULMAGIC1 &&	\
	 (prbuf)->urbuf_ulMagic2 == __TMS_USB_RING_BUFFER_ULMAGIC2 &&	\
	 (prbuf)->urbuf_base < (prbuf)->urbuf_end &&			\
	 ((prbuf)->urbuf_base <= (prbuf)->urbuf_head &&			\
	  (prbuf)->urbuf_head < prbuf->urbuf_end) &&			\
	 ((prbuf)->urbuf_base <= prbuf->urbuf_tail &&			\
	  (prbuf)->urbuf_tail < prbuf->urbuf_end))


/****************************************************************************\
|
|	Function Prototypes
|
\****************************************************************************/

__TMS_BEGIN_DECLS
__TMS_BOOL	UsbRingBuffer_AllocateBody(
			__TMS_PUPLATFORM	/* pPlatform */,
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */,
			__TMS_BYTES
			);
__TMS_BYTES	UsbRingBuffer_Flush(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */
			);
__TMS_VOID	UsbRingBuffer_FreeBody(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */
			);
__TMS_BYTES	UsbRingBuffer_Get(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */,
			__TMS_VOID *		/* pBuffer */,
			__TMS_BYTES		/* SizeInBytes */
			);
__TMS_VOID	UsbRingBuffer_Init(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */,
			__TMS_VOID *		/* pBuffer */,
			__TMS_BYTES		/* SizeInBytes */
			);
__TMS_VOID	UsbRingBuffer_Init_V2(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */,
			__TMS_VOID *		/* pBuffer */,
			__TMS_BYTES		/* SizeInBytes */,
			__TMS_UPLATFORM *	/* pPlatform */
			);
__TMS_BYTES	UsbRingBuffer_Put(
			__TMS_PUSB_RING_BUFFER	/* pRingBuffer */,
			__TMS_CONST __TMS_VOID * /* pBuffer */,
			__TMS_BYTES		/* SizeInBytes */
			);
__TMS_END_DECLS


/****************************************************************************\
|
|	Uncloaked names
|
\****************************************************************************/

/**** uncloaked names generated by uncloak-defs.sh ****/
#if !__TMS_CLOAKED_NAMES_ONLY
# define USB_RING_BUFFER_ULMAGIC1	\
   __TMS_USB_RING_BUFFER_ULMAGIC1
# define USB_RING_BUFFER_ULMAGIC2	\
   __TMS_USB_RING_BUFFER_ULMAGIC2
# define USB_RING_BUFFER_VALID(prbuf)	\
   __TMS_USB_RING_BUFFER_VALID(prbuf)
#endif /* !__TMS_CLOAKED_NAMES_ONLY */

/**** end of usbringbuffer.h ****/
#endif /* _USBRINGBUFFER_H_ */
