/* usbpump_usbd_class_generic_config.h	Mon Nov 17 2008 16:09:13 wkkim */

/*

Module:  usbpump_usbd_class_generic_config.h

Function:
	Definition of the USBD Generic driver configuration

Version:
	V1.97k	Mon Nov 17 2008 16:09:13 wkkim	Edit level 2

Copyright notice:
	This file copyright (C) 2008 by

		MCCI Corporation
		3520 Krums Corners Road
		Ithaca, NY  14850

	An unpublished work.  All rights reserved.

	This file is proprietary information, and may not be disclosed or
	copied without the prior permission of MCCI Corporation

Author:
	Wonkun Kim, MCCI Corporation	April 2008

Revision history:
   1.97k  Wed Apr 30 2008 13:26:29  wkkim
	Module created.

   1.97k  Mon Nov 17 2008 16:09:13  wkkim
	Make the configuration have the number of configurations,
	interfaces, alternative settings and pipes and the maximum number of
	the multiple request at the same time and the maximum size of
	configuration bundle.

*/

#ifndef _USBPUMP_USBD_CLASS_GENERIC_CONFIG_H_	/* prevent multiple includes */
#define _USBPUMP_USBD_CLASS_GENERIC_CONFIG_H_

#ifndef _USBPUMP_TYPES_H_
# include "usbpump_types.h"
#endif

/****************************************************************************\
|
|	The USBD Generic Class Driver Configuration
|
\****************************************************************************/

__TMS_TYPE_DEF_STRUCT	(USBPUMP_USBDI_CLASS_GENERIC_CONFIG);
struct __TMS_STRUCTNAME	(USBPUMP_USBDI_CLASS_GENERIC_CONFIG)
	{
	__TMS_UINT32			MagicBegin;

	/*
	|| Number of maximum sessions -- it should include OpenSession and
	|| OpenFunction session
	*/
	__TMS_UINT			MaxSession;

	/*
	|| the number of configurations which are owned by the USB device that
	|| GCD supports
	*/
	__TMS_UINT			NumConfig;

	/*
	|| the number of interfaces which are owned by the USB device that GCD
	|| supports
	*/
	__TMS_UINT			NumIfc;

	/*
	|| the number of alternative settings which are owned by the USB device
	|| that GCD supports
	*/
	__TMS_UINT			NumAlt;

	/*
	|| the number of pipes which are owned by the USB device that GCD
	|| supports
	*/
	__TMS_UINT			NumPipe;

	/*
	|| the number of client requests that GCD is able to handle at the same
	|| time
	*/
	__TMS_UINT			NumRequest;

	/*
	|| the maximum size (bytes) of the configuration bundle the GCD supports
	*/
	__TMS_UINT			MaxConfigDescSize;

	__TMS_UINT32			MagicEnd;
	};


#define	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_BEGIN		\
	__TMS_UHIL_MEMTAG('<', 'T', 'g', 'd')

#define	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_END		\
	__TMS_UHIL_MEMTAG('>', 'T', 'g', 'd')

#define	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_INIT_V1(		\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)								\
	{								\
	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_BEGIN,		\
	(a_MaxSession),							\
	(a_NumConfig),							\
	(a_NumIfc),							\
	(a_NumAlt),							\
	(a_NumPipe),							\
	(a_NumRequest),							\
	(a_MaxConfigDescSize),						\
	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_END		\
	}

#define	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_SETUP_V1(		\
	a_pConfig, 							\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)								\
    do	{								\
	(a_pConfig)->MagicBegin =					\
		__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_BEGIN;	\
	(a_pConfig)->MaxSession = 		a_MaxSession;		\
	(a_pConfig)->NumConfig = 		a_NumConfig;		\
	(a_pConfig)->NumIfc = 			a_NumIfc;		\
	(a_pConfig)->NumAlt = 			a_NumAlt;		\
	(a_pConfig)->NumPipe = 			a_NumPipe;		\
	(a_pConfig)->NumRequest = 		a_NumRequest;		\
	(a_pConfig)->MaxConfigDescSize =	a_MaxConfigDescSize;	\
	(a_pConfig)->MagicEnd =						\
		__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_END;	\
	} while (0)


/****************************************************************************\
|
|	Uncloaked names
|
\****************************************************************************/

/**** uncloaked names generated by uncloak-defs.sh ****/
#if !__TMS_CLOAKED_NAMES_ONLY
# define USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_BEGIN	\
   __TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_BEGIN
# define USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_END	\
   __TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_MAGIC_END
# define USBPUMP_USBDI_CLASS_GENERIC_CONFIG_INIT_V1(		\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)	\
	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_INIT_V1(		\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)
# define USBPUMP_USBDI_CLASS_GENERIC_CONFIG_SETUP_V1(		\
	a_pConfig, 							\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)	\
	__TMS_USBPUMP_USBDI_CLASS_GENERIC_CONFIG_SETUP_V1(		\
	a_pConfig, 							\
	a_MaxSession,							\
	a_NumConfig,							\
	a_NumIfc,							\
	a_NumAlt,							\
	a_NumPipe,							\
	a_NumRequest,							\
	a_MaxConfigDescSize						\
	)
#endif /* !__TMS_CLOAKED_NAMES_ONLY */

/**** end of usbpump_usbd_class_generic_config.h ****/
#endif /* _USBPUMP_USBD_CLASS_GENERIC_CONFIG_H_ */
