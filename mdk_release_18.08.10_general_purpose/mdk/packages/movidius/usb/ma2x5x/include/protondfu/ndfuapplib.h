/* ndfuapplib.h		Mon Jun 13 2011 16:54:07 chwon */

/*

Module:  ndfuapplib.h

Function:
	Header file that puts together the necessary things for this
	application.

Version:
	V3.01f	Mon Jun 13 2011 16:54:07 chwon	Edit level 5

Copyright notice:
	This file copyright (C) 2004, 2010-2011 by

		MCCI Corporation
		3520 Krums Corners Road
		Ithaca, NY  14850

	An unpublished work.  All rights reserved.

	This file is proprietary information, and may not be disclosed or
	copied without the prior permission of MCCI Corporation

Author:
	Mats Webjorn, MCCI Corporation	June 2004

Revision history:
   1.89a  Mon Jun 14 2004 10:50:37  maw
	Module created.

   1.89b  Tue Jul 27 2004 03:50:09  chwon
	Remove compiler warning; change uram_State type from UCHAR to 
	USBPUMP_DOWNLOAD_CLIENT_STATE.

   1.93b  Thu Oct 27 2005 21:02:18 maw
   	Corrected IAR compiler warning

   3.01a  Tue Sep 14 2010 08:51:46  maw
   	11105: Move NDFUDEMO_DEVOBJ into NDFUDEMO_RAMLOAD

   3.01f  Mon Jun 13 2011 16:54:07  chwon
	11353: add interface and alternate setting number parameter for the
	NDfuDemo_Id2Region().

*/

#ifndef _NDFUAPPLIB_H_		/* prevent multiple includes */
#define _NDFUAPPLIB_H_

#include "uplatform.h"
#include "usbpumpenv.h"
#include "ueventnode.h"
#include "ucallback.h"
#include "usbioctl_download.h"

/****************************************************************************\
|
|	constants
|
\****************************************************************************/

#define	__TMS_NDFUDEMO_TAG_RAMLOAD	__TMS_UHIL_MEMTAG('D','n','l','d')

#define	__TMS_NDFUDEMO_NAME_RAMLOAD	"ramload.osdriver.mcci.com"


/****************************************************************************\
|
|	The RAMLOAD structure
|
\****************************************************************************/

__TMS_TYPE_DEF_STRUCT(NDFUDEMO_RAMLOAD);
struct __TMS_STRUCTNAME(NDFUDEMO_RAMLOAD)
	{
	/*
	|| For convenience, and so we can recieve IOCTLs, we need
	|| an object header.
	*/
	__TMS_USBPUMP_OBJECT_CONTENTS__STRUCT;

	/*
	|| We need someplace to store the "object handle" to NDFU
	|| function driver object
	*/
	__TMS_PUSBPUMP_OBJECT_HEADER	uram_pDfuFnObject;

	/*
	|| For allocations, we really need a pDevice and a pPlatform
	*/
	__TMS_PUDEVICE			uram_pDevice;
	__TMS_PUPLATFORM		uram_pPlatform;

	__TMS_ULONG			uram_Flags;
	__TMS_USBPUMP_DOWNLOAD_CLIENT_STATE	uram_State;
	__TMS_UCHAR			uram_Status;
	
	__TMS_UEVENTNODE		uram_DeviceEventNode;
	__TMS_ULONG			uram_TmrId;
	__TMS_UINT8			uram_StringId;
	__TMS_UINT8			uram_bInterface;
	__TMS_UINT8			uram_bAlternateSetting;

	/* Pointer and counter while incrementally reading/writing data */
	__TMS_UINT8 *			uram_pSrcBuf;
	__TMS_UINT8 *			uram_pDstBuf;
	__TMS_BYTES			uram_nBytes;	

	__TMS_UINT32			uram_CrcAcc;
	
	/* Memory region for this instance */
	__TMS_UINT8 *			uram_pRegion;
	__TMS_BYTES			uram_nBytesRegion;
	};


/****************************************************************************\
|
|	The variables
|
\****************************************************************************/

extern __TMS_USBPUMP_DOWNLOAD_DEVICE_MODE gk_NDfuDemo_DeviceMode;
extern __TMS_USBPUMP_DOWNLOAD_DEVICE_MODE gk_NDfuDemo_NextDeviceMode;

/****************************************************************************\
|
|	The functions.
|
\****************************************************************************/

__TMS_BEGIN_DECLS

__TMS_BOOL NDfuDemo_CreateRamLoad(
		__TMS_PUPLATFORM			/* pPlatform */,
		__TMS_PUSBPUMP_OBJECT_HEADER		/* pFunctionObject */,
		__TMS_PNDFUDEMO_RAMLOAD *		/* ppRamLoad */
		);

__TMS_BOOL NDfuDemo_Id2Region(
		__TMS_UDEVICE *				/* pDevice */,
		__TMS_UINT8				/* StringId */, 
		__TMS_UINT8				/* bInterface */,
		__TMS_UINT8				/* bAlternateSetting */,
		__TMS_BYTES *				/* pnBytes */,
		__TMS_UINT8 **				/* ppRegion */
		);

__TMS_END_DECLS

/****************************************************************************\
|
|	Uncloaked names
|
\****************************************************************************/

/**** uncloaked names generated by uncloak-defs.sh ****/
#if !__TMS_CLOAKED_NAMES_ONLY
# define NDFUDEMO_TAG_RAMLOAD	\
   __TMS_NDFUDEMO_TAG_RAMLOAD
# define NDFUDEMO_NAME_RAMLOAD	\
   __TMS_NDFUDEMO_NAME_RAMLOAD
#endif /* !__TMS_CLOAKED_NAMES_ONLY */

/**** end of ndfuapplib.h ****/
#endif /* _NDFUAPPLIB_H_ */
